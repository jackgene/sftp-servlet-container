apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.6 // TODO boot class path
version = '0.0-SNAPSHOT'

defaultTasks 'clean', 'distZip'

jar {
    baseName = 'coyote-sftp'
}

repositories {
    mavenCentral()
}

configurations {
    dist
}

dependencies {
    ext.SLF4J_VERSION = '1.6.+'
    ext.TOMCAT_VERSION = '7.0.+'
    
    compile(
        "org.apache.sshd:sshd-core:0.7.+",
        "org.apache.tomcat:tomcat-catalina:${TOMCAT_VERSION}",
        "org.apache.tomcat:tomcat-coyote:${TOMCAT_VERSION}",
        "org.slf4j:slf4j-api:${SLF4J_VERSION}",
    )
    runtime(
        "org.apache.tomcat:tomcat-jasper:${TOMCAT_VERSION}",
        "org.slf4j:slf4j-simple:${SLF4J_VERSION}",
    )
    testCompile(
        "junit:junit:4.+",
    )
    dist(
        "org.apache.sshd:sshd-core:0.7.+",
        "org.slf4j:slf4j-jdk14:${SLF4J_VERSION}",
    )
}

task runTestServer(type: JavaExec, dependsOn: classes) {
    main = 'org.apache.catalina.startup.Bootstrap'
    args 'start'
    workingDir = project.projectDir.absolutePath + '/testServer'
    classpath configurations.runtime
    classpath sourceSets.main.output.classesDir
    classpath sourceSets.main.output.resourcesDir
}

task distZip(type: Zip, dependsOn: jar) {
    baseName = 'coyote-sftp'
    
    from 'LICENSE'
    from 'NOTICE'
    from 'src/main/documentation'
    
    into('/copy-to-tomcat-lib') {
        from jar.archivePath 
        from configurations.dist into '/copy-to-tomcat-lib'
    }
    // TODO include docs
}

task wrapper(type: Wrapper)
